{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"en/","title":"Overview","text":"<p>This project is a modular, plugin-based system built on top of Pyrogram, providing the ability to handle various scenarios through custom plugins and handlers. The bot allows for the dynamic loading, unloading, and updating of modules, as well as customization through a <code>.env</code> configuration file.</p>"},{"location":"en/#key-features","title":"Key Features","text":"<ul> <li>Modular system: Allows for easy integration and management of custom modules (plugins).</li> <li>Scenario-based message handling: Customizable message scenarios can be created by extending the base class.</li> <li>Dynamic module management: Download, load, and unload modules on the fly.</li> <li>.env file configuration: Environment variables are managed via a <code>.env</code> file.</li> </ul>"},{"location":"en/#additional-notes","title":"Additional Notes","text":"<ul> <li>Logging: The bot uses Python\u2019s <code>logging</code> module to provide detailed logs. You can configure log levels via the <code>.env</code> file.</li> <li>Pyrogram: The bot heavily relies on the Pyrogram library for interacting with Telegram's API. Make sure to consult the Pyrogram documentation if needed.</li> </ul>"},{"location":"en/config/","title":"Config","text":""},{"location":"en/config/#configuration","title":"Configuration","text":"<p>The configuration is managed through a <code>.env</code> file. This file contains key-value pairs that define various environment variables used throughout the bot.</p>"},{"location":"en/config/#example-env","title":"Example <code>.env</code>","text":"<pre><code>TELEGRAM_API_ID=123456\nTELEGRAM_API_HASH=abcdef1234567890abcdef1234567890\nTELEGRAM_SESSION_STRING=abcdef1234567890abcdef1234567890 #If you have\nLOG_LEVEL=INFO\n</code></pre>"},{"location":"en/config/#accessing-config-values","title":"Accessing Config Values","text":"<p>The <code>Config</code> class loads and manages the configuration file.</p>"},{"location":"en/config/#example-usage","title":"Example Usage","text":"<pre><code>config = Config()\napi_id = config.get(\"TELEGRAM_API_ID\") # TELEGRAM_API_ID env value\n</code></pre> <p>You can also dynamically update configuration values:</p> <pre><code>config.set(\"NEW_KEY\", \"new_value\")\nconfig.update_env_file()  # Save the updated config to the .env file\n</code></pre>"},{"location":"en/installation/","title":"Installation","text":""},{"location":"en/installation/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.10+</li> <li>Tassistant (<code>pip install tassistant-bot</code>)</li> <li>Git (<code>sudo apt install git</code>)</li> </ul>"},{"location":"en/installation/#steps-to-install-dev-version","title":"Steps to install dev version","text":"<ol> <li> <p>Clone the repository: <code>git clone https://github.com/kinsoRick/tassistant/tree/main &amp;&amp; cd tassistant</code></p> </li> <li> <p>Install the necessary dependencies: <code>poetry install</code></p> </li> <li> <p>Set up the <code>.env</code> file for your environment</p> </li> <li> <p>Fill in the necessary values in your <code>.env</code> file (e.g., API keys).</p> </li> <li> <p>Build the project: <code>poetry build \\</code></p> </li> <li> <p>Run the bot: <code>poetry run python -m tassistant_bot</code></p> </li> </ol>"},{"location":"en/module/","title":"Modules (how to create)","text":"<p>Modules extend the bot\u2019s functionality by providing handlers, services, and commands. Each module lives in a dedicated directory and is loaded dynamically by the bot.</p>"},{"location":"en/module/#module-structure","title":"Module Structure","text":"<p>Each module should contain:</p> <ul> <li><code>module.py</code>: The main file that defines the module.</li> <li><code>locale/</code>: A folder containing localization files.</li> <li><code>services/</code>: Optional services related to the module.</li> <li><code>handlers/</code>: Handlers that process different types of messages or events.</li> </ul> <pre><code>tassistant-core:\n\u251c\u2500\u2500\u2500handlers                  # (mandatory folder)\n\u2502       &lt;file&gt;.py\n\u2502       __init__.py\n\u2502\n\u251c\u2500\u2500\u2500locale                    # (mandatory folder)\n\u2502   \u2514\u2500\u2500\u2500&lt;lang&gt;\n\u2502           HELP_MODULE.txt   # (mandatory file) prints help of module\n\u2502           &lt;file&gt;.json       # contains key as code, value as translation\n\u2502           &lt;file&gt;.txt        # name of file as code, contains translation\n\u2502\n\u2502\n\u251c\u2500\u2500\u2500scenarios                 # (folder for scenarios if have)\n\u2514\u2500\u2500\u2500module.py                 # (mandatory file)\n</code></pre>"},{"location":"en/module/#how-to-create-a-module","title":"How to Create a Module","text":"<p>To create a new module, follow these steps:</p> <ul> <li>Create a new directory (name of module) inside the <code>modules</code> folder.</li> <li>Inside that directory, create a <code>module.py</code> file, and define your module by extending the <code>Module</code> class:</li> </ul> <pre><code>from tassistant_bot.loader import Module\nfrom tassistant_bot.i18n import I18n\n\n\n_ = I18n().create_module_get(\"tassistant-core\")\n\nclass MyCustomModule(Module):\n    class Meta:\n        name = \"My Custom module\"\n        description = \"This module does something cool.\"\n\n    async def client_ready(self, client):\n        await super().client_ready(client)\n        # send welcome message from locale to saved messages (cloud)\n        await client.send_message(\"me\", _(\"WELCOME_MESSAGE\"))\n</code></pre> <ul> <li> <p>Add your handlers in the <code>handlers/</code> directory and services in the <code>services/</code> directory.</p> </li> <li> <p>(In development) Load the module in your bot by calling:</p> </li> </ul> <pre><code>module_loader = ModuleLoader(client=my_pyrogram_client)\nmodule_loader.load_module(\"MyCustomModule\") # name of repo or folder\n</code></pre>"},{"location":"en/module/#module-management-in-development","title":"Module Management (In development)","text":"<ul> <li>Download a module: You can download a module from a GitHub repository using the <code>download_module</code> method:</li> </ul> <pre><code>module_loader.download_module('https://github.com/username/repository.git')\n</code></pre> <ul> <li>Load a module: Load the module by calling:</li> </ul> <pre><code>module_loader.load_module(\"module_name\")\n</code></pre> <ul> <li>Unload a module: You can unload a module when it\u2019s no longer needed:</li> </ul> <pre><code>module_loader.unload_module(\"module_name\")\n</code></pre> <ul> <li>Update a module: To check for updates and reload a module:</li> </ul> <pre><code>module_loader.update_module(\"module_name\")\n</code></pre>"},{"location":"en/module/#handlers","title":"Handlers","text":"<p>Handlers in this project are functions that handle specific chat events, such as commands or messages, using Pyrogram's <code>MessageHandler</code>. Each handler is responsible for responding to a particular command or message pattern. Handlers are defined individually and then grouped into the <code>all_handlers</code> list for registration.</p>"},{"location":"en/module/#creating-a-handler","title":"Creating a Handler","text":"<p>To create a handler, follow these steps:</p> <ul> <li> <p>Define the handler function: The function should be asynchronous and accept two parameters: the Pyrogram <code>Client</code> and a <code>Message</code> object. <pre><code>async def example_handler(client: Client, message: Message):\n    # Your code here\n    pass\n</code></pre></p> </li> <li> <p>Create the <code>MessageHandler</code> object: After defining the function, wrap it in a <code>MessageHandler</code> along with the necessary filters. <pre><code>example_message_handler = MessageHandler(\n    example_handler,\n    filters.command(\"example_command\", prefixes=ModuleLoader().get_command_prefix()) &amp; filters.me\n)\n</code></pre></p> </li> <li> <p>Add the handler to the <code>all_handlers</code> list: This list should contain all the handlers that will be registered in the bot. <pre><code>all_handlers = [\n    example_message_handler,\n    # Add other handlers here\n]\n</code></pre></p> </li> </ul>"},{"location":"en/module/#example-handler","title":"Example Handler","text":"<p>Here's an example of a handler that listens for a command and deletes the message after processing: <pre><code>async def hello_handler(client: Client, message: Message):\n    await message.delete()\n    await client.send_message(message.chat.id, \"Hello, world!\")\n\nhello_message_handler = MessageHandler(\n    hello_handler,\n    filters.command(\n        \"hello\",\n\n        # gets prefix from Tassistant\n        prefixes=ModuleLoader().get_command_prefix()\n    ) &amp; filters.me\n)\n\nall_handlers = [\n    hello_message_handler,\n]\n</code></pre></p>"},{"location":"en/module/#registering-handlers","title":"Registering Handlers","text":"<p>After defining your handlers and adding them to the <code>all_handlers</code> list, they will be registered and ready to use when the bot starts.</p> <p>Each handler file contain all_handlers lista with all handlers</p>"},{"location":"en/module/#scenarios","title":"Scenarios","text":"<p>Scenarios are custom message handling processes that extend the base <code>BaseScenario</code> class. Each scenario can have its own filters, state, and message handlers.</p>"},{"location":"en/module/#scenario-structure","title":"Scenario Structure","text":"<p>A scenario class should extend <code>BaseScenario</code>, which provides the following methods:</p> <ul> <li><code>configure()</code>: To configure the scenario.</li> <li><code>init_all_handlers()</code>: To initialize all related handlers.</li> <li><code>post_configure()</code>: Optional processing after the scenario is configured.</li> </ul>"},{"location":"en/module/#how-to-create-a-scenario","title":"How to Create a Scenario","text":"<ol> <li>Create a class that extends <code>BaseScenario</code>:</li> </ol> <pre><code>from tassistant_bot.scenario import BaseScenario\nfrom pyrogram import Client\nfrom pyrogram.handlers import MessageHandler\nfrom pyrogram import filters\nfrom pyrogram.types import Message\n\nclass MyScenario(BaseScenario):\n    class Meta:\n        name = \"MyScenario\"\n        description = \"Handles specific message scenarios.\"\n\n    def __init__(self, filters):\n        super().__init__(filters=filters)\n        self.chat = None\n\n    async def echo_handler(self, client: Client, message: Message):\n       await message.reply(f\"echo -&gt; {message.text}\")\n\n    # command `/echo chat_name @username1, @username2, ...`\n    async def configure(self, client: Client, message: Message):\n        command = message.command[0]\n        args = message.command[1:]\n\n        title = args[0]\n        users = [str(username).replace(\"@\", \"\") for username in args[1:]]\n\n        client_username = str(client.me.username)\n        # caching chat in memory\n        self.chat = await client.create_group(title, users)\n\n    async def init_all_handlers(self, client: Client):\n        client.add_handler(MessageHandler(\n           self.echo_handler,\n           # filters using cached chat.id\n           filters.chat(self.chat.id)\n        ))\n\n    async def post_configure(self, client: Client, message: Message):\n        await message.delete()\n</code></pre> <ol> <li>Register the scenario with the bot by adding it to your module.</li> </ol>"},{"location":"en/module/#localization","title":"Localization","text":"<p>Localization is handled through the <code>I18n</code> class. Modules can provide locale files in the <code>locale/</code> directory.</p> <ul> <li>Load locales: Modules load locales using the <code>load_locale()</code> method.</li> <li>Update locales: The <code>I18n</code> instance updates locale data dynamically.</li> </ul> <pre><code>\u251c\u2500\u2500\u2500locale\n\u2502   \u2514\u2500\u2500\u2500&lt;lang&gt;\n\u2502           HELP_MODULE.txt   # (mandatory file) prints help of module\n\u2502           &lt;file&gt;.json       # contains key as code, value as translation\n\u2502           &lt;file&gt;.txt        # name of file as code, contains translation\n</code></pre>"},{"location":"ru/","title":"\u041e\u0431\u0437\u043e\u0440","text":"<p>\u042d\u0442\u043e\u0442 \u043f\u0440\u043e\u0435\u043a\u0442 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u043c\u043e\u0434\u0443\u043b\u044c\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043f\u043b\u0430\u0433\u0438\u043d\u043e\u0432, \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0443\u044e \u043f\u043e\u0432\u0435\u0440\u0445 Pyrogram, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u043f\u043b\u0430\u0433\u0438\u043d\u043e\u0432 \u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432. \u0411\u043e\u0442 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438 \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0442\u044c, \u0432\u044b\u0433\u0440\u0443\u0436\u0430\u0442\u044c \u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0442\u044c \u043c\u043e\u0434\u0443\u043b\u0438, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0442\u044c \u0435\u0433\u043e \u0447\u0435\u0440\u0435\u0437 \u0444\u0430\u0439\u043b \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 <code>.env</code>.</p>"},{"location":"ru/#_2","title":"\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438","text":"<ul> <li>\u041c\u043e\u0434\u0443\u043b\u044c\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430: \u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u043b\u0451\u0433\u043a\u0443\u044e \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044e \u0438 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u043c\u0438 \u043c\u043e\u0434\u0443\u043b\u044f\u043c\u0438 (\u043f\u043b\u0430\u0433\u0438\u043d\u0430\u043c\u0438).</li> <li>\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0435\u0432: \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043c\u043e\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c, \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u044f \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441.</li> <li>\u0414\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0443\u043b\u044f\u043c\u0438: \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0442\u044c, \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0442\u044c \u0438 \u0432\u044b\u0433\u0440\u0443\u0436\u0430\u0442\u044c \u043c\u043e\u0434\u0443\u043b\u0438 \"\u043d\u0430 \u043b\u0435\u0442\u0443\".</li> <li>\u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u0447\u0435\u0440\u0435\u0437 \u0444\u0430\u0439\u043b .env: \u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0430\u0439\u043b\u0430 <code>.env</code>.</li> </ul>"},{"location":"ru/#_3","title":"\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0437\u0430\u043c\u0435\u0447\u0430\u043d\u0438\u044f","text":"<ul> <li>\u041b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435: \u0411\u043e\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043c\u043e\u0434\u0443\u043b\u044c <code>logging</code> Python \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0434\u0435\u0442\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0436\u0443\u0440\u043d\u0430\u043b\u043e\u0432. \u0423\u0440\u043e\u0432\u043d\u0438 \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u0444\u0430\u0439\u043b <code>.env</code>.</li> <li>Pyrogram: \u0411\u043e\u0442 \u0430\u043a\u0442\u0438\u0432\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 Pyrogram \u0434\u043b\u044f \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 API Telegram. \u041f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u0435\u0441\u044c \u043a \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 Pyrogram.</li> </ul>"},{"location":"ru/config/","title":"\u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f","text":"<p>\u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0447\u0435\u0440\u0435\u0437 \u0444\u0430\u0439\u043b <code>.env</code>. \u042d\u0442\u043e\u0442 \u0444\u0430\u0439\u043b \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043f\u0430\u0440\u044b \"\u043a\u043b\u044e\u0447-\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\", \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u044e\u0442 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u0432 \u0431\u043e\u0442\u0435.</p>"},{"location":"ru/config/#env","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0444\u0430\u0439\u043b\u0430 <code>.env</code>","text":"<pre><code>TELEGRAM_API_ID=123456\nTELEGRAM_API_HASH=abcdef1234567890abcdef1234567890\nTELEGRAM_SESSION_STRING=abcdef1234567890abcdef1234567890 # \u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c\nLOG_LEVEL=INFO\n</code></pre>"},{"location":"ru/config/#_2","title":"\u0414\u043e\u0441\u0442\u0443\u043f \u043a \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438","text":"<p>\u041a\u043b\u0430\u0441\u0441 <code>Config</code> \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u043c \u0444\u0430\u0439\u043b\u043e\u043c.</p>"},{"location":"ru/config/#_3","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f","text":"<pre><code>config = Config()\napi_id = config.get(\"TELEGRAM_API_ID\") # \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f TELEGRAM_API_ID\n</code></pre> <p>\u0412\u044b \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438:</p> <pre><code>config.set(\"NEW_KEY\", \"new_value\")\nconfig.update_env_file()  # \u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u0443\u044e \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044e \u0432 \u0444\u0430\u0439\u043b .env\n</code></pre>"},{"location":"ru/installation/","title":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430","text":""},{"location":"ru/installation/#_2","title":"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f","text":"<ul> <li>Python 3.10+</li> <li>Tassistant (<code>pip install tassistant-bot</code>)</li> <li>Git (<code>sudo apt install git</code>)</li> </ul>"},{"location":"ru/installation/#_3","title":"\u0428\u0430\u0433\u0438 \u0434\u043b\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0432\u0435\u0440\u0441\u0438\u0438 \u0434\u043b\u044f \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438","text":"<ol> <li> <p>\u041a\u043b\u043e\u043d\u0438\u0440\u0443\u0439\u0442\u0435 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439:    <pre><code>git clone https://github.com/kinsoRick/tassistant/tree/main &amp;&amp; cd tassistant\n</code></pre></p> </li> <li> <p>\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438:    <pre><code>poetry install\n</code></pre></p> </li> <li> <p>\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b <code>.env</code> \u0434\u043b\u044f \u0432\u0430\u0448\u0435\u0433\u043e \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f.</p> </li> <li> <p>\u0417\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u0432\u0430\u0448\u0435\u043c \u0444\u0430\u0439\u043b\u0435 <code>.env</code> (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, API-\u043a\u043b\u044e\u0447\u0438).</p> </li> <li> <p>\u0421\u043e\u0431\u0435\u0440\u0438\u0442\u0435 \u043f\u0440\u043e\u0435\u043a\u0442:    <pre><code>poetry build \\\n</code></pre></p> </li> <li> <p>\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0431\u043e\u0442\u0430:    <pre><code>poetry run python -m tassistant_bot\n</code></pre></p> </li> </ol>"},{"location":"ru/module/","title":"\u041c\u043e\u0434\u0443\u043b\u0438 (\u043a\u0430\u043a \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c)","text":"<p>\u041c\u043e\u0434\u0443\u043b\u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u044e\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0431\u043e\u0442\u0430, \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438, \u0441\u0435\u0440\u0432\u0438\u0441\u044b \u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u044b. \u041a\u0430\u0436\u0434\u044b\u0439 \u043c\u043e\u0434\u0443\u043b\u044c \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0438 \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442\u0441\u044f \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438 \u0431\u043e\u0442\u043e\u043c.</p>"},{"location":"ru/module/#_2","title":"\u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u043c\u043e\u0434\u0443\u043b\u044f","text":"<p>\u041a\u0430\u0436\u0434\u044b\u0439 \u043c\u043e\u0434\u0443\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c:</p> <ul> <li><code>module.py</code>: \u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0444\u0430\u0439\u043b, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u044e\u0449\u0438\u0439 \u043c\u043e\u0434\u0443\u043b\u044c.</li> <li><code>locale/</code>: \u041f\u0430\u043f\u043a\u0430, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0430\u044f \u0444\u0430\u0439\u043b\u044b \u043b\u043e\u043a\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438.</li> <li><code>services/</code>: \u041e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0435 \u0441\u0435\u0440\u0432\u0438\u0441\u044b, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u0441 \u043c\u043e\u0434\u0443\u043b\u0435\u043c.</li> <li><code>handlers/</code>: \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u044e\u0442 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0442\u0438\u043f\u044b \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0438\u043b\u0438 \u0441\u043e\u0431\u044b\u0442\u0438\u0439.</li> </ul> <pre><code>tassistant-core:\n\u251c\u2500\u2500\u2500handlers                  # (\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u043f\u0430\u043f\u043a\u0430)\n\u2502       &lt;file&gt;.py\n\u2502       __init__.py\n\u2502\n\u251c\u2500\u2500\u2500locale                    # (\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u043f\u0430\u043f\u043a\u0430)\n\u2502   \u2514\u2500\u2500\u2500&lt;lang&gt;\n\u2502           HELP_MODULE.txt   # (\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0444\u0430\u0439\u043b) \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043c\u043e\u0449\u044c \u043c\u043e\u0434\u0443\u043b\u044f\n\u2502           &lt;file&gt;.json       # \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043a\u043e\u0434 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043a\u043b\u044e\u0447\u0430, \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0430\n\u2502           &lt;file&gt;.txt        # \u0438\u043c\u044f \u0444\u0430\u0439\u043b\u0430 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043a\u043e\u0434\u0430, \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043f\u0435\u0440\u0435\u0432\u043e\u0434\n\u2502\n\u2502\n\u251c\u2500\u2500\u2500scenarios                 # (\u043f\u0430\u043f\u043a\u0430 \u0434\u043b\u044f \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0435\u0432, \u0435\u0441\u043b\u0438 \u0435\u0441\u0442\u044c)\n\u2514\u2500\u2500\u2500module.py                 # (\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0444\u0430\u0439\u043b)\n</code></pre>"},{"location":"ru/module/#_3","title":"\u041a\u0430\u043a \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043c\u043e\u0434\u0443\u043b\u044c","text":"<p>\u0427\u0442\u043e\u0431\u044b \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u043c\u043e\u0434\u0443\u043b\u044c, \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0448\u0430\u0433\u0438:</p> <ul> <li>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u043d\u043e\u0432\u0443\u044e \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e (\u0438\u043c\u044f \u043c\u043e\u0434\u0443\u043b\u044f) \u0432\u043d\u0443\u0442\u0440\u0438 \u043f\u0430\u043f\u043a\u0438 <code>modules</code>.</li> <li>\u0412\u043d\u0443\u0442\u0440\u0438 \u044d\u0442\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0441\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0444\u0430\u0439\u043b <code>module.py</code> \u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u0435 \u0432\u0430\u0448 \u043c\u043e\u0434\u0443\u043b\u044c, \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u044f \u043a\u043b\u0430\u0441\u0441 <code>Module</code>:</li> </ul> <pre><code>from tassistant_bot.loader import Module\nfrom tassistant_bot.i18n import I18n\n\n_ = I18n().create_module_get(\"tassistant-core\")\n\nclass MyCustomModule(Module):\n    class Meta:\n        name = \"My Custom module\"\n        description = \"\u042d\u0442\u043e\u0442 \u043c\u043e\u0434\u0443\u043b\u044c \u0434\u0435\u043b\u0430\u0435\u0442 \u0447\u0442\u043e-\u0442\u043e \u043a\u0440\u0443\u0442\u043e\u0435.\"\n\n    async def client_ready(self, client):\n        await super().client_ready(client)\n        # \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043f\u0440\u0438\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0438\u0437 \u043b\u043e\u043a\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0432 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u043d\u044b\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f (\u043e\u0431\u043b\u0430\u043a\u043e)\n        await client.send_message(\"me\", _(\"WELCOME_MESSAGE\"))\n</code></pre> <ul> <li> <p>\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0441\u0432\u043e\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u0432 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e <code>handlers/</code> \u0438 \u0441\u0435\u0440\u0432\u0438\u0441\u044b \u0432 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e <code>services/</code>.</p> </li> <li> <p>(\u041d\u0430 \u0441\u0442\u0430\u0434\u0438\u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438) \u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u0435 \u043c\u043e\u0434\u0443\u043b\u044c \u0432 \u0431\u043e\u0442\u0430, \u0432\u044b\u0437\u0432\u0430\u0432:</p> </li> </ul> <pre><code>module_loader = ModuleLoader(client=my_pyrogram_client)\nmodule_loader.load_module(\"MyCustomModule\") # \u0438\u043c\u044f \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f \u0438\u043b\u0438 \u043f\u0430\u043f\u043a\u0438\n</code></pre>"},{"location":"ru/module/#_4","title":"\u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0443\u043b\u044f\u043c\u0438 (\u041d\u0430 \u0441\u0442\u0430\u0434\u0438\u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438)","text":"<ul> <li>\u0421\u043a\u0430\u0447\u0430\u0442\u044c \u043c\u043e\u0434\u0443\u043b\u044c: \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u043a\u0430\u0447\u0430\u0442\u044c \u043c\u043e\u0434\u0443\u043b\u044c \u0438\u0437 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f GitHub, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043c\u0435\u0442\u043e\u0434 <code>download_module</code>:</li> </ul> <pre><code>module_loader.download_module('https://github.com/username/repository.git')\n</code></pre> <ul> <li>\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u043c\u043e\u0434\u0443\u043b\u044c: \u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u0435 \u043c\u043e\u0434\u0443\u043b\u044c, \u0432\u044b\u0437\u0432\u0430\u0432:</li> </ul> <pre><code>module_loader.load_module(\"module_name\")\n</code></pre> <ul> <li>\u0412\u044b\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u043c\u043e\u0434\u0443\u043b\u044c: \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u044b\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u043c\u043e\u0434\u0443\u043b\u044c, \u043a\u043e\u0433\u0434\u0430 \u043e\u043d \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u043d\u0443\u0436\u0435\u043d:</li> </ul> <pre><code>module_loader.unload_module(\"module_name\")\n</code></pre> <ul> <li>\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043c\u043e\u0434\u0443\u043b\u044c: \u0427\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0438 \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u043c\u043e\u0434\u0443\u043b\u044c:</li> </ul> <pre><code>module_loader.update_module(\"module_name\")\n</code></pre>"},{"location":"ru/module/#_5","title":"\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438","text":"<p>\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u0432 \u044d\u0442\u043e\u043c \u043f\u0440\u043e\u0435\u043a\u0442\u0435 \u2014 \u044d\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u044e\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0435 \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u0447\u0430\u0442\u0430, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0438\u043b\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f, \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e <code>MessageHandler</code> \u0438\u0437 Pyrogram. \u041a\u0430\u0436\u0434\u044b\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u043e\u0442\u0432\u0435\u0442 \u043d\u0430 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0443\u044e \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0438\u043b\u0438 \u0448\u0430\u0431\u043b\u043e\u043d \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f. \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u044e\u0442\u0441\u044f \u0438\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u043e \u0438 \u0437\u0430\u0442\u0435\u043c \u0433\u0440\u0443\u043f\u043f\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u0432 \u0441\u043f\u0438\u0441\u043e\u043a <code>all_handlers</code> \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438.</p>"},{"location":"ru/module/#_6","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430","text":"<p>\u0427\u0442\u043e\u0431\u044b \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a, \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0448\u0430\u0433\u0438:</p> <ul> <li> <p>\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430: \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0439 \u0438 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c \u0434\u0432\u0430 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430: <code>Client</code> \u0438\u0437 Pyrogram \u0438 \u043e\u0431\u044a\u0435\u043a\u0442 <code>Message</code>. <pre><code>async def example_handler(client: Client, message: Message):\n    # \u0412\u0430\u0448 \u043a\u043e\u0434 \u0437\u0434\u0435\u0441\u044c\n    pass\n</code></pre></p> </li> <li> <p>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u043e\u0431\u044a\u0435\u043a\u0442 <code>MessageHandler</code>: \u041f\u043e\u0441\u043b\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043e\u0431\u0435\u0440\u043d\u0438\u0442\u0435 \u0435\u0451 \u0432 <code>MessageHandler</code> \u0432\u043c\u0435\u0441\u0442\u0435 \u0441 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u043c\u0438 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u043c\u0438. <pre><code>example_message_handler = MessageHandler(\n    example_handler,\n    filters.command(\"example_command\", prefixes=ModuleLoader().get_command_prefix()) &amp; filters.me\n)\n</code></pre></p> </li> <li> <p>\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0432 \u0441\u043f\u0438\u0441\u043e\u043a <code>all_handlers</code>: \u042d\u0442\u043e\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0432\u0441\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u0432 \u0431\u043e\u0442\u0435. <pre><code>all_handlers = [\n    example_message_handler,\n    # \u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0434\u0440\u0443\u0433\u0438\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u0437\u0434\u0435\u0441\u044c\n]\n</code></pre></p> </li> </ul>"},{"location":"ru/module/#_7","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430","text":"<p>\u0412\u043e\u0442 \u043f\u0440\u0438\u043c\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043b\u0443\u0448\u0430\u0435\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0438 \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043f\u043e\u0441\u043b\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438: <pre><code>async def hello_handler(client: Client, message: Message):\n    await message.delete()\n    await client.send_message(message.chat.id, \"Hello, world!\")\n\nhello_message_handler = MessageHandler(\n    hello_handler,\n    filters.command(\n        \"hello\",\n\n        # \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043f\u0440\u0435\u0444\u0438\u043a\u0441 \u043e\u0442 Tassistant\n        prefixes=ModuleLoader().get_command_prefix()\n    ) &amp; filters.me\n)\n\nall_handlers = [\n    hello_message_handler,\n]\n</code></pre></p>"},{"location":"ru/module/#_8","title":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432","text":"<p>\u041f\u043e\u0441\u043b\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0432\u0430\u0448\u0438\u0445 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432 \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0438\u0445 \u0432 \u0441\u043f\u0438\u0441\u043e\u043a <code>all_handlers</code>, \u043e\u043d\u0438 \u0431\u0443\u0434\u0443\u0442 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u0438 \u0433\u043e\u0442\u043e\u0432\u044b \u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e, \u043a\u043e\u0433\u0434\u0430 \u0431\u043e\u0442 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0441\u044f.</p> <p>\u041a\u0430\u0436\u0434\u044b\u0439 \u0444\u0430\u0439\u043b \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u043f\u0438\u0441\u043e\u043a <code>all_handlers</code> \u0441\u043e \u0432\u0441\u0435\u043c\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430\u043c\u0438.</p>"},{"location":"ru/module/#_9","title":"\u0421\u0446\u0435\u043d\u0430\u0440\u0438\u0438","text":"<p>\u0421\u0446\u0435\u043d\u0430\u0440\u0438\u0438 \u2014 \u044d\u0442\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u044b \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u044e\u0442 \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 <code>BaseScenario</code>. \u041a\u0430\u0436\u0434\u044b\u0439 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0439 \u043c\u043e\u0436\u0435\u0442 \u0438\u043c\u0435\u0442\u044c \u0441\u0432\u043e\u0438 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u0444\u0438\u043b\u044c\u0442\u0440\u044b, \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439.</p>"},{"location":"ru/module/#_10","title":"\u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u044f","text":"<p>\u041a\u043b\u0430\u0441\u0441 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u044f \u0434\u043e\u043b\u0436\u0435\u043d \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u0442\u044c <code>BaseScenario</code>, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u044b:</p> <ul> <li><code>configure()</code>: \u0414\u043b\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u044f.</li> <li><code>init_all_handlers()</code>: \u0414\u043b\u044f \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0432\u0441\u0435\u0445 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432.</li> <li><code>post_configure()</code>: \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043f\u043e\u0441\u043b\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u044f (\u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e).</li> </ul>"},{"location":"ru/module/#_11","title":"\u041a\u0430\u043a \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0439","text":"<ol> <li>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u043a\u043b\u0430\u0441\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u0435\u0442 <code>BaseScenario</code>:</li> </ol> <pre><code>from tassistant_bot.scenario import BaseScenario\nfrom pyrogram import Client\nfrom pyrogram.handlers import MessageHandler\nfrom pyrogram import filters\nfrom pyrogram.types import Message\n\nclass MyScenario(BaseScenario):\n    class Meta:\n        name = \"MyScenario\"\n        description = \"\u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0435 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439.\"\n\n    def __init__(self, filters):\n        super().__init__(filters=filters)\n        self.chat = None\n\n    async def echo_handler(self, client: Client, message: Message):\n       await message.reply(f\"echo -&gt; {message.text}\")\n\n    # \u043a\u043e\u043c\u0430\u043d\u0434\u0430 `/echo chat_name @username1, @username2, ...`\n    async def configure(self, client: Client, message: Message):\n        command = message.command[0]\n        args = message.command[1:]\n\n        title = args[0]\n        users = [str(username).replace(\"@\", \"\") for username in args[1:]]\n\n        client_username = str(client.me.username)\n        # \u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0447\u0430\u0442\u0430 \u0432 \u043f\u0430\u043c\u044f\u0442\u0438\n        self.chat = await client.create_group(title, users)\n\n    async def init_all_handlers(self, client: Client):\n        client.add_handler(MessageHandler(\n           self.echo_handler,\n           # \u0444\u0438\u043b\u044c\u0442\u0440\u044b, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0437\u0430\u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 chat.id\n           filters.chat(self.chat.id)\n        ))\n\n    async def post_configure(self, client: Client, message: Message):\n        await message.delete()\n</code></pre> <ol> <li>\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0439\u0442\u0435 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0439 \u0432 \u0431\u043e\u0442\u0435, \u0434\u043e\u0431\u0430\u0432\u0438\u0432 \u0435\u0433\u043e \u0432 \u0432\u0430\u0448 \u043c\u043e\u0434\u0443\u043b\u044c.</li> </ol>"},{"location":"ru/module/#_12","title":"\u041b\u043e\u043a\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f","text":"<p>\u041b\u043e\u043a\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0447\u0435\u0440\u0435\u0437 \u043a\u043b\u0430\u0441\u0441 <code>I18n</code>. \u041c\u043e\u0434\u0443\u043b\u0438 \u043c\u043e\u0433\u0443\u0442 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u0444\u0430\u0439\u043b\u044b \u043b\u043e\u043a\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0432 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 <code>locale/</code>.</p> <ul> <li>\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043b\u043e\u043a\u0430\u043b\u0435\u0439: \u041c\u043e\u0434\u0443\u043b\u0438 \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u044e\u0442 \u043b\u043e\u043a\u0430\u043b\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 <code>load_locale()</code>.</li> <li>\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043b\u043e\u043a\u0430\u043b\u0435\u0439: \u042d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 <code>I18n</code> \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043b\u043e\u043a\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438.</li> </ul> <pre><code>\u251c\u2500\u2500\u2500locale\n\u2502   \u2514\u2500\u2500\u2500&lt;lang&gt;\n\u2502           HELP_MODULE.txt   # (\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0444\u0430\u0439\u043b) \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043c\u043e\u0449\u044c \u043c\u043e\u0434\u0443\u043b\u044f\n\u2502           &lt;file&gt;.json       # \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043a\u043e\u0434 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043a\u043b\u044e\u0447\u0430, \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0430\n\u2502           &lt;file&gt;.txt        # \u0438\u043c\u044f \u0444\u0430\u0439\u043b\u0430 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043a\u043e\u0434\u0430, \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043f\u0435\u0440\u0435\u0432\u043e\u0434\n</code></pre>"}]}